--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v84=v2(v0(v30,16));if v19 then local v91=v5(v84,v19);v19=nil;return v91;else return v84;end end end);local function v20(v31,v32,v33)if v33 then local v85=0 -0 ;local v86;while true do if (v85==(0 -0)) then v86=(v31/((1 + 1)^(v32-1)))%(((120 -(32 + 85)) -1)^(((v33-(2 -(1 + 0))) -(v32-(620 -(555 + 15 + 49)))) + (932 -(857 + 74)))) ;return v86-(v86%(569 -(367 + 201))) ;end end else local v87=((2024 -(892 + 65)) -((162 -94) + 997))^(v32-(928 -((395 -181) + 713))) ;return (((v31%(v87 + v87))>=v87) and (1271 -(226 + 1044))) or (0 -0) ;end end local function v21()local v34=0 -0 ;local v35;while true do if (v34==(1 -0)) then return v35;end if (v34==(350 -(87 + 263))) then v35=v1(v16,v18,v18);v18=v18 + (181 -(67 + 113)) ;v34=1 + 0 ;end end end local function v22()local v36=0 + 0 ;local v37;local v38;while true do if (v36==(3 -2)) then return (v38 * 256) + v37 ;end if (v36==(952 -((1799 -(915 + 82)) + 150))) then v37,v38=v1(v16,v18,v18 + (5 -(8 -5)) );v18=v18 + ((2 + 1) -1) ;v36=1 + 0 ;end end end local function v23()local v39,v40,v41,v42=v1(v16,v18,v18 + (3 -0) );v18=v18 + ((2116 -925) -(1069 + 118)) ;return (v42 * (38062656 -21285440)) + (v41 * (143357 -77821)) + (v40 * (45 + 211)) + v39 ;end local function v24()local v43=0 + 0 + (885 -(261 + 624)) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(794 -(368 + 423))) then if (v48==(0 -0)) then if (v47==(18 -(10 + 8))) then return v49 * ((0 -0) -0) ;else v48=443 -(416 + 26) ;v46=0 -0 ;end elseif (v48==(3127 -(1020 + 60))) then return ((v47==((1423 -(630 + 793)) + 0)) and (v49 * ((1 -0)/(0 -0)))) or (v49 * NaN) ;end return v8(v49,v48-(1461 -(145 + 293)) ) * (v46 + (v47/((432 -(44 + 386))^(1538 -(998 + 488))))) ;end if (v43==2) then v48=v20(v45,7 + (66 -52) ,31);v49=((v20(v45,27 + 5 )==(773 -(80 + 121 + 571))) and  -(1139 -(116 + 1022))) or (4 -(9 -6)) ;v43=2 + 1 ;end if (v43==1) then v46=3 -2 ;v47=(v20(v45,3 -2 ,20) * ((861 -(814 + (1792 -(760 + 987))))^32)) + v44 ;v43=4 -2 ;end if (v43==(0 + 0)) then v44=v23();v45=v23();v43=1;end end end local function v25(v50)local v51=(1736 + 177) -(1789 + 124) ;local v52;local v53;while true do if (v51==(768 -(745 + 21))) then v53={};for v92=1 + 0 , #v52 do v53[v92]=v2(v1(v3(v52,v92,v92)));end v51=7 -4 ;end if ((3 -2)==v51) then v52=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;v51=2;end if (v51==(0 + (0 -0))) then v52=nil;if  not v50 then v50=v23();if (v50==(1055 -(87 + 968))) then return "";end end v51=4 -3 ;end if (v51==3) then return v6(v53);end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=1171 -(418 + 753) ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v54==2) then v59=nil;v60=nil;v54=2 + 1 ;end if (v54==(1 + 3)) then v63=nil;while true do if ((1 + 1)~=v55) then else v60=nil;v61=nil;v55=1 + 2 ;end if (v55==4) then while true do if (v56~=(530 -(406 + 123))) then else v59=nil;v60=nil;v56=1771 -(1749 + 20) ;end if (2==v56) then local v99=0;while true do if ((0 + 0)==v99) then v61=nil;v62=nil;v99=1323 -(1249 + 73) ;end if (v99~=(1 + 0)) then else v56=1148 -(466 + 679) ;break;end end end if (v56==0) then v57=0 -0 ;v58=nil;v56=2 -1 ;end if (3==v56) then v63=nil;while true do local v100=1900 -(106 + 1794) ;local v101;while true do if (v100==0) then v101=0;while true do if (v101~=0) then else local v184=0 + 0 ;local v185;while true do if (v184==0) then v185=0 + 0 ;while true do if (v185~=1) then else v101=2 -1 ;break;end if (v185==0) then local v198=0;while true do if (0==v198) then if (v57==(5 -3)) then local v202=114 -(4 + 110) ;while true do local v204=0;while true do if (v204==(584 -(57 + 527))) then if (v202==1) then return v61;end if (v202==0) then local v210=1427 -(41 + 1386) ;while true do if (v210~=(104 -(17 + 86))) then else v202=1 + 0 ;break;end if (v210==(0 -0)) then local v211=0 -0 ;while true do if (v211~=(167 -(122 + 44))) then else v210=1;break;end if (v211==(0 -0)) then for v215=3 -2 ,v23() do local v216=0 + 0 ;local v217;while true do if (v216~=(0 + 0)) then else v217=v21();if (v20(v217,1,1 -0 )==0) then local v226=0;local v227;local v228;local v229;local v230;while true do if (v226==(65 -(30 + 35))) then local v233=0;while true do if (v233==(0 + 0)) then v227=1257 -(1043 + 214) ;v228=nil;v233=3 -2 ;end if (v233==1) then v226=1;break;end end end if (v226==(1214 -(323 + 889))) then while true do if (v227~=1) then else local v238=0 -0 ;while true do if (v238==(581 -(361 + 219))) then v227=2;break;end if (0==v238) then v230={v22(),v22(),nil,nil};if (v228==0) then local v249=0;while true do if (v249~=(982 -(18 + 964))) then else v230[11 -8 ]=v22();v230[3 + 1 ]=v22();break;end end elseif (v228==(1 + 0)) then v230[3]=v23();elseif (v228==2) then v230[3]=v23() -(2^(866 -(20 + 830))) ;elseif (v228~=(3 + 0)) then else local v255=0;local v256;local v257;while true do if (v255~=(127 -(116 + 10))) then else while true do if (v256==0) then v257=0;while true do if ((0 + 0)~=v257) then else v230[3]=v23() -(2^16) ;v230[742 -(542 + 196) ]=v22();break;end end break;end end break;end if (v255==(0 -0)) then v256=0 + 0 ;v257=nil;v255=1;end end end v238=1;end end end if (v227~=3) then else if (v20(v229,2 + 1 ,2 + 1 )==(2 -1)) then v230[4]=v63[v230[4]];end v58[v215]=v230;break;end if ((0 -0)==v227) then local v240=0;while true do if (v240~=(1552 -(1126 + 425))) then else v227=1;break;end if (v240==(405 -(118 + 287))) then local v247=0 -0 ;while true do if (v247==0) then v228=v20(v217,1123 -(118 + 1003) ,8 -5 );v229=v20(v217,4,383 -(142 + 235) );v247=4 -3 ;end if (v247==1) then v240=1 + 0 ;break;end end end end end if (v227==2) then if (v20(v229,1,1)==(978 -(553 + 424))) then v230[3 -1 ]=v63[v230[2]];end if (v20(v229,2 + 0 ,2 + 0 )==1) then v230[3]=v63[v230[3]];end v227=2 + 1 ;end end break;end if (v226~=1) then else local v234=0 + 0 ;while true do if (v234~=1) then else v226=2;break;end if (v234==0) then v229=nil;v230=nil;v234=1;end end end end end break;end end end for v218=1 + 0 ,v23() do v59[v218-(2 -1) ]=v28();end v211=1;end end end end end break;end end end end if (v57==(2 -1)) then local v203=0 -0 ;while true do if (v203~=0) then else local v205=0 + 0 ;local v206;while true do if (0==v205) then v206=0;while true do if (v206~=0) then else local v212=0;while true do if (v212~=0) then else v62=v23();v63={};v212=1;end if (v212==(4 -3)) then v206=754 -(239 + 514) ;break;end end end if (v206==1) then v203=1 + 0 ;break;end end break;end end end if (v203==1) then local v207=0;local v208;while true do if (0~=v207) then else v208=1329 -(797 + 532) ;while true do if (v208==(1 + 0)) then v203=1 + 1 ;break;end if (v208==0) then local v213=0 -0 ;while true do if (v213==(1202 -(373 + 829))) then for v220=732 -(476 + 255) ,v62 do local v221=0;local v222;local v223;local v224;local v225;while true do if (v221==(1131 -(369 + 761))) then v224=nil;v225=nil;v221=2 + 0 ;end if (v221~=(0 -0)) then else v222=0;v223=nil;v221=1 -0 ;end if (v221~=(240 -(64 + 174))) then else while true do if ((0 + 0)==v222) then local v231=0 -0 ;local v232;while true do if (v231~=0) then else v232=336 -(144 + 192) ;while true do if (1==v232) then v222=217 -(42 + 174) ;break;end if (v232~=(0 + 0)) then else v223=0;v224=nil;v232=1;end end break;end end end if (v222~=(1 + 0)) then else v225=nil;while true do if (v223==0) then local v235=0 + 0 ;local v236;while true do if ((1504 -(363 + 1141))==v235) then v236=1580 -(1183 + 397) ;while true do if (v236==1) then v223=2 -1 ;break;end if (v236~=0) then else local v248=0 + 0 ;while true do if (v248==0) then local v251=0 + 0 ;while true do if (v251~=0) then else v224=v21();v225=nil;v251=1976 -(1913 + 62) ;end if (v251==(1 + 0)) then v248=2 -1 ;break;end end end if (v248==(1934 -(565 + 1368))) then v236=3 -2 ;break;end end end end break;end end end if (v223==1) then if (v224==(1662 -(1477 + 184))) then v225=v21()~=(0 -0) ;elseif (v224==2) then v225=v24();elseif (v224~=3) then else v225=v25();end v63[v220]=v225;break;end end break;end end break;end end end v61[3]=v21();v213=1 + 0 ;end if (v213==1) then v208=857 -(564 + 292) ;break;end end end end break;end end end if (v203~=2) then else v57=2;break;end end end v198=1;end if (v198~=1) then else v185=1 -0 ;break;end end end end break;end end end if (v101~=(2 -1)) then else if (v57==(304 -(244 + 60))) then local v196=0;local v197;while true do if (v196==0) then v197=0;while true do if ((1 + 0)==v197) then local v199=476 -(41 + 435) ;local v200;while true do if (v199==0) then v200=0;while true do if (v200==(1001 -(938 + 63))) then local v209=0;while true do if (v209==(0 + 0)) then v60={};v61={v58,v59,nil,v60};v209=1 + 0 ;end if (v209==1) then v200=1614 -(1565 + 48) ;break;end end end if (v200==(1 + 0)) then v197=1140 -(782 + 356) ;break;end end break;end end end if (v197~=(269 -(176 + 91))) then else v57=1;break;end if (v197==0) then local v201=0;while true do if (v201~=(2 -1)) then else v197=1;break;end if (v201==0) then v58={};v59={};v201=1;end end end end break;end end end break;end end break;end end end break;end end break;end if (v55==3) then v62=nil;v63=nil;v55=4;end if (v55~=(1 -0)) then else local v98=0;while true do if (v98==(1092 -(975 + 117))) then v58=nil;v59=nil;v98=1876 -(157 + 1718) ;end if (v98==1) then v55=2;break;end end end if (v55==0) then v56=0 + 0 ;v57=nil;v55=3 -2 ;end end break;end if ((0 -0)==v54) then v55=0;v56=nil;v54=1019 -(697 + 321) ;end if (v54~=1) then else v57=nil;v58=nil;v54=2;end if (v54==3) then v61=nil;v62=nil;v54=10 -6 ;end end end local function v29(v64,v65,v66)local v67=v64[1];local v68=v64[2];local v69=v64[3];return function(...)local v70=v67;local v71=v68;local v72=v69;local v73=v27;local v74=1;local v75= -1;local v76={};local v77={...};local v78=v12("#",...) -1 ;local v79={};local v80={};for v88=0,v78 do if (v88>=v72) then v76[v88-v72 ]=v77[v88 + 1 ];else v80[v88]=v77[v88 + 1 ];end end local v81=(v78-v72) + 1 ;local v82;local v83;while true do v82=v70[v74];v83=v82[1];if (v83<=20) then if (v83<=9) then if (v83<=4) then if (v83<=1) then if (v83==0) then v80[v82[2]]=v66[v82[3]];else for v144=v82[2],v82[3] do v80[v144]=nil;end end elseif (v83<=2) then v80[v82[2]]={};elseif (v83==3) then do return;end elseif (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end elseif (v83<=6) then if (v83>5) then if (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end else local v105=v82[2];v80[v105]=v80[v105]();end elseif (v83<=7) then v80[v82[2]]=v82[3];elseif (v83==8) then v80[v82[2]]={};else local v151=v82[2];v80[v151](v13(v80,v151 + 1 ,v82[3]));end elseif (v83<=14) then if (v83<=11) then if (v83==10) then v80[v82[2]]=v80[v82[3]];else local v111=0;local v112;local v113;while true do if (v111==1) then v80[v112 + 1 ]=v113;v80[v112]=v113[v82[4]];break;end if (v111==0) then v112=v82[2];v113=v80[v82[3]];v111=1;end end end elseif (v83<=12) then local v114=0;local v115;while true do if (v114==0) then v115=v82[2];v80[v115](v80[v115 + 1 ]);break;end end elseif (v83>13) then v80[v82[2]]=v66[v82[3]];else local v154=0;local v155;while true do if (v154==0) then v155=v82[2];v80[v155]=v80[v155](v13(v80,v155 + 1 ,v75));break;end end end elseif (v83<=17) then if (v83<=15) then v80[v82[2]][v82[3]]=v82[4];elseif (v83>16) then v80[v82[2]]=v80[v82[3]];else local v158=v82[2];v80[v158]=v80[v158]();end elseif (v83<=18) then local v118=v82[2];v80[v118](v13(v80,v118 + 1 ,v82[3]));elseif (v83==19) then v80[v82[2]]();else do return;end end elseif (v83<=30) then if (v83<=25) then if (v83<=22) then if (v83==21) then v80[v82[2]][v82[3]]=v80[v82[4]];else v74=v82[3];end elseif (v83<=23) then v74=v82[3];elseif (v83>24) then v80[v82[2]]();else local v160=0;local v161;while true do if (v160==0) then v161=v82[2];v80[v161]=v80[v161](v13(v80,v161 + 1 ,v82[3]));break;end end end elseif (v83<=27) then if (v83>26) then local v123=v82[2];v80[v123]=v80[v123](v13(v80,v123 + 1 ,v75));else v80[v82[2]]=v29(v71[v82[3]],nil,v66);end elseif (v83<=28) then v80[v82[2]]=v80[v82[3]][v82[4]];elseif (v83==29) then local v162=v82[2];v80[v162]=v80[v162](v13(v80,v162 + 1 ,v82[3]));else v80[v82[2]][v82[3]]=v80[v82[4]];end elseif (v83<=35) then if (v83<=32) then if (v83==31) then v80[v82[2]]=v82[3];else local v130=v82[2];local v131,v132=v73(v80[v130](v13(v80,v130 + 1 ,v82[3])));v75=(v132 + v130) -1 ;local v133=0;for v146=v130,v75 do v133=v133 + 1 ;v80[v146]=v131[v133];end end elseif (v83<=33) then v80[v82[2]][v82[3]]=v82[4];elseif (v83==34) then if (v82[2]==v80[v82[4]]) then v74=v74 + 1 ;else v74=v82[3];end else v80[v82[2]]=v29(v71[v82[3]],nil,v66);end elseif (v83<=38) then if (v83<=36) then local v136=0;local v137;local v138;while true do if (v136==0) then v137=v82[2];v138=v80[v82[3]];v136=1;end if (v136==1) then v80[v137 + 1 ]=v138;v80[v137]=v138[v82[4]];break;end end elseif (v83>37) then for v181=v82[2],v82[3] do v80[v181]=nil;end else local v167=v82[2];v80[v167](v80[v167 + 1 ]);end elseif (v83<=39) then local v139=0;local v140;local v141;local v142;local v143;while true do if (v139==2) then for v188=v140,v75 do v143=v143 + 1 ;v80[v188]=v141[v143];end break;end if (1==v139) then v75=(v142 + v140) -1 ;v143=0;v139=2;end if (v139==0) then v140=v82[2];v141,v142=v73(v80[v140](v13(v80,v140 + 1 ,v82[3])));v139=1;end end elseif (v83>40) then v80[v82[2]]=v80[v82[3]][v82[4]];elseif (v80[v82[2]]==v82[4]) then v74=v74 + 1 ;else v74=v82[3];end v74=v74 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
